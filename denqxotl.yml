---
apiVersion: v1
kind: Namespace
metadata:
  name: denqxotl
---
# PersistentVolumeClaim for PostgreSQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: denqxotl
spec:
  storageClassName: "local-path"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Deployment for PostgreSQL + PostGIS
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: denqxotl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: kartoza/postgis:15-3.3
          env:
            - name: POSTGRES_USER
              value: denqxotl
            - name: POSTGRES_PASSWORD
              value: password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 200m
              memory: 512Mi
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc
---
# Service for PostgreSQL exposed via NodePort
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: denqxotl
spec:
  type: NodePort
  selector:
    app: postgres
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
      nodePort: 30032
---
# PersistentVolumeClaim for Redis
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: denqxotl
spec:
  storageClassName: "local-path"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Deployment for Redis
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: denqxotl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7.0.9
          command: ["redis-server", "--appendonly", "yes"]
          ports:
            - containerPort: 6379
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-pvc
---
# Service for Redis
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: denqxotl
spec:
  type: NodePort
  selector:
    app: redis
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
      nodePort: 30033  # Optional: exposes externally, change as needed